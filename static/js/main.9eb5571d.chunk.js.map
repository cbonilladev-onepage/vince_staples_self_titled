{"version":3,"sources":["components/Footer/Footer.js","components/Header/Header.js","assets/pausebutton.svg","assets/playbutton.svg","components/Visualizer/Visualizer.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","props","useState","minutes","seconds","Math","floor","elapsedTime","class","toLocaleString","minimumIntegerDigits","useGrouping","Header","style","fontWeight","className","Visualizer","audioState","setAudioState","handleAudio","PlayButton","onClick","src","playButton","alt","PauseButton","pauseButton","CurrButton","loop","playing","url","onProgress","handleProgress","App","setElapsedTime","playedSeconds","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAkBeA,EAfA,SAACC,GACf,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAEMC,GAFN,KAEgBC,KAAKC,MAAML,EAAMM,cAEjC,OACC,sBAAKC,MAAM,SAAX,UACC,oBAAIA,MAAM,aAAV,2BACA,oBAAIA,MAAM,aAAV,kCACA,oBAAIA,MAAM,aAAV,qBACA,qBAAIA,MAAM,aAAV,kBAA6BL,EAAQM,eAAe,QAAS,CAACC,qBAAsB,EAAGC,aAAa,IAApG,MAAgHP,EAAQK,eAAe,QAAS,CAACC,qBAAsB,EAAGC,aAAa,WCF3KC,G,MARA,WACd,OACC,iCACC,sBAAMC,MAAO,CAACC,WAAY,OAAQC,UAAU,aAA5C,gE,yBCNY,MAA0B,wCCA1B,MAA0B,uCCmE1BC,G,MA5DI,SAACf,GACnB,MAAoCC,oBAAS,GAA7C,mBAAOe,EAAP,KAAmBC,EAAnB,KAEMC,EAAc,WACnBD,GAAeD,IAGVG,EAAa,WAClB,OAAO,qBAAKC,QAASF,EAAaJ,UAAU,aAAaO,IAAKC,EAAYC,IAAI,iBAGzEC,EAAc,WACnB,OAAO,qBAAKJ,QAASF,EAAaJ,UAAU,cAAcO,IAAKI,EAAaF,IAAI,kBAyB3EG,EAAa,WAClB,OAAIV,EACI,cAACQ,EAAD,IAED,cAACL,EAAD,KAGR,OACC,qBAAKL,UAAU,sBAAf,SACC,qBAAKA,UAAU,kBAAf,SACC,gCACC,cAACY,EAAD,IACA,cAAC,IAAD,CAAaC,MAAM,EAAMC,QAASZ,EAAYF,UAAU,cAAce,IAAI,8CAA8CC,WAAY9B,EAAM+B,0BChChIC,MAlBf,WACC,MAAsC/B,mBAAS,GAA/C,mBAAOK,EAAP,KAAoB2B,EAApB,KAOC,OACE,sBAAKnB,UAAU,aAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYR,YAAaA,EAAa2B,eAAgBA,EAAgBF,eARpD,SAAC,GAAqB,IAApBG,EAAmB,EAAnBA,cACxBD,EAAeC,MAQX,qBAAKpB,UAAU,iBACf,cAAC,EAAD,CAAQR,YAAaA,QCPZ6B,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9eb5571d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = (props) => {\r\n\tconst [minutes, setMinutes] = useState(0)\r\n\r\n\tconst seconds = Math.floor(props.elapsedTime)\r\n\r\n\treturn (\r\n\t\t<div class=\"Footer\">\r\n\t\t\t<h2 class=\"FooterText\">Vince Staples</h2>\r\n\t\t\t<h2 class=\"FooterText\">The Apple & The Tree</h2>\r\n\t\t\t<h2 class=\"FooterText\">Track 6</h2>\r\n\t\t\t<h2 class=\"FooterText\">00 : {minutes.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping: false})} : {seconds.toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping: false})}</h2>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<span style={{fontWeight: '700'}} className=\"TitleTrack\">*** Vince Staples *** By *** Vince Staples ***</span>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/pausebutton.94b3b031.svg\";","export default __webpack_public_path__ + \"static/media/playbutton.162e0452.svg\";","import \"p5/lib/addons/p5.sound\";\r\nimport React, { useState } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport pauseButton from '../../assets/pausebutton.svg';\r\nimport playButton from '../../assets/playbutton.svg';\r\nimport './Visualizer.css';\r\n\r\nconst Visualizer = (props) => {\r\n\tconst [audioState, setAudioState] = useState(false);\r\n\r\n\tconst handleAudio = () => {\r\n\t\tsetAudioState(!audioState)\r\n\t}\r\n\r\n\tconst PlayButton = () => {\r\n\t\treturn <img onClick={handleAudio} className=\"PlayButton\" src={playButton} alt=\"play button\" />\r\n\t}\r\n\r\n\tconst PauseButton = () => {\r\n\t\treturn <img onClick={handleAudio} className=\"PauseButton\" src={pauseButton} alt=\"pause button\" />\r\n\t}\r\n\r\n\t// const s = (sketch) => {\r\n\t// \tvar mic;\r\n\t\t\r\n\t// \tsketch.setup = () => {\r\n\t// \t\tsketch.createCanvas(800, 600)\r\n\t// \t\tmic = new p5.AudioIn();\r\n\t// \t\tmic.start();\r\n\t// \t};\r\n\r\n\t// \tsketch.draw = () => {\r\n\t// \t\tsketch.background(51);\r\n\t// \t\tlet vol = mic.getLevel();\r\n\t// \t\tsketch.ellipse(sketch.height/2, sketch.height/2, vol*500, vol*500);\r\n\t// \t};\r\n\t// };\r\n\r\n\t// useEffect(() => {\r\n\t// \t//If you don't throw a useEffect, it will render multiple canvas. No no no.\r\n\t// \tvar myp5 = new p5(s, 'p5sketch');\r\n\t// }, [])\r\n\r\n\r\n\tconst CurrButton = () => {\r\n\t\tif (audioState) {\r\n\t\t\treturn <PauseButton />\r\n\t\t}\r\n\t\treturn <PlayButton />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"VisualizerContainer\">\r\n\t\t\t<div className=\"VisualizerField\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<CurrButton />\r\n\t\t\t\t\t<ReactPlayer loop={true} playing={audioState} className=\"audioSource\" url=\"https://www.youtube.com/watch?v=2r3mx_8GF9E\" onProgress={props.handleProgress}></ReactPlayer>\r\n\t\t\t\t\t{/* <p>VISUALIZER</p> */}\r\n\t\t\t\t\t{/* <div id=\"p5sketch\" className=\"visualizer\">\r\n\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Visualizer\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport Visualizer from './components/Visualizer/Visualizer';\n\nfunction App() {\n\tconst [elapsedTime, setElapsedTime] = useState(0)\n\n\tconst handleProgress = ({playedSeconds}) => {\n\t\tsetElapsedTime(playedSeconds)\n    // console.log(playedSeconds)\n\t}\n\n  return (\n    <div className=\"SiteLayout\">\n      <Header/>\n      <Visualizer elapsedTime={elapsedTime} setElapsedTime={setElapsedTime} handleProgress={handleProgress}/>\n      <div className=\"BottomBorder\"></div>\n      <Footer elapsedTime={elapsedTime}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}